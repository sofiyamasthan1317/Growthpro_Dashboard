---

# GrowthProAI – Mini Local Business Dashboard

This project is a full-stack web application built as part of the GrowthProAI Full Stack Internship assignment. It simulates how small businesses might view their SEO content and Google Business data.

---

Live Demo
Frontend: https://growthpro-dashboard.netlify.app
Backend API: https://growthpro-dashboard-backend.onrender.com

---

## Tech Stack

| Layer      | Technology                          |
| ---------- | ----------------------------------- |
| Frontend   | React (CRA), Tailwind CSS           |
| Backend    | Node.js, Express.js                 |
| Deployment | Vercel (Frontend), Render (Backend) |

---

## Features

* Input form for Business Name and Location
* Fetches and displays:

  * Simulated Google Rating
  * Number of Reviews
  * AI-generated SEO Headline
* "Regenerate SEO Headline" button to fetch a new headline
* Tailwind CSS for clean and responsive design
* Basic form validation and loading indicator

---

## Project Structure

```
GrowthPro_Dashboard/
├── frontend/         # React + Tailwind CSS
│   └── src/
│       ├── components/
│       │   ├── BusinessForm.js
│       │   └── BusinessCard.js
│       ├── App.js
│       ├── index.js
│       └── index.css
│
├── backend/          # Node.js + Express API
│   ├── index.js
│   └── package.json
```

---

## How to Run Locally

### Backend

```bash
cd backend
npm install
node index.js
```

Runs the backend server at `http://localhost:5000`

---

### Frontend

```bash
cd frontend
npm install
npm start
```

Runs the React app at `http://localhost:3000`

Ensure the frontend is pointing to the correct backend URL.

---

## API Endpoints

### POST `/business-data`

**Request Body:**

```json
{
  "name": "Cake & Co",
  "location": "Mumbai"
}
```

**Response:**

```json
{
  "rating": 4.3,
  "reviews": 127,
  "headline": "Why Cake & Co is Mumbai's Sweetest Spot in 2025"
}
```

---

### GET `/regenerate-headline?name=...&location=...`

Returns a fresh AI-style headline randomly selected from a static list.

---

## Bonus Features Implemented

* Responsive design using Tailwind CSS
* Loading spinner during API requests
* Form validation for required fields
* Clean and maintainable component-based structure

---
